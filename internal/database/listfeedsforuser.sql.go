// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: listfeedsforuser.sql

package database

import (
	"context"

	"github.com/google/uuid"
)

const listFeedsForUser = `-- name: ListFeedsForUser :many
SELECT feed_follows.feed_id, feeds.name AS feed_name, feeds.url AS feed_url FROM feed_follows 
INNER JOIN feeds 
ON  feed_follows.feed_id = feeds.id
WHERE feed_follows.user_id = $1
`

type ListFeedsForUserRow struct {
	FeedID   uuid.UUID
	FeedName string
	FeedUrl  string
}

func (q *Queries) ListFeedsForUser(ctx context.Context, userID uuid.UUID) ([]ListFeedsForUserRow, error) {
	rows, err := q.db.QueryContext(ctx, listFeedsForUser, userID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []ListFeedsForUserRow
	for rows.Next() {
		var i ListFeedsForUserRow
		if err := rows.Scan(&i.FeedID, &i.FeedName, &i.FeedUrl); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
